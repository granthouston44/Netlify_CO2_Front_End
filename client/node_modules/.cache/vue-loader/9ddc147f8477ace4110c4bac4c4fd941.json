{"remainingRequest":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/components/FormsLiveHere.vue?vue&type=template&id=3805d6cb&scoped=true&","dependencies":[{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/components/FormsLiveHere.vue","mtime":1579263691461},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}