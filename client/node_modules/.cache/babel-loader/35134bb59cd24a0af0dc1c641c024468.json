{"remainingRequest":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/babel-loader/lib/index.js!/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/EmissionFactorsService.js","dependencies":[{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/EmissionFactorsService.js","mtime":1579102510310},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CnZhciBiYXNlVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvZW1pc3Npb25zL2VtaXNzaW9uRmFjdG9ycyc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRFbWlzc2lvbkZhY3RvcnM6IGZ1bmN0aW9uIGdldEVtaXNzaW9uRmFjdG9ycygpIHsKICAgIHJldHVybiBmZXRjaChiYXNlVVJMKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICB9KTsKICB9LAogIHBvc3Q6IGZ1bmN0aW9uIHBvc3QocGF5bG9hZCkgewogICAgcmV0dXJuIGZldGNoKGJhc2VVcmwsIHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/EmissionFactorsService.js"],"names":["baseURL","getEmissionFactors","fetch","then","res","json","post","payload","baseUrl","method","body","JSON","stringify","headers"],"mappings":";AAAA,IAAMA,OAAO,GAAG,qDAAhB;AAEA,eAAc;AACZC,EAAAA,kBADY,gCACQ;AAClB,WAAOC,KAAK,CAACF,OAAD,CAAL,CACNG,IADM,CACD,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADF,CAAP;AAED,GAJW;AAKZC,EAAAA,IALY,gBAKPC,OALO,EAKC;AACX,WAAOL,KAAK,CAACM,OAAD,EAAU;AACpBC,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAFc;AAGpBM,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHW,KAAV,CAAL,CAKNV,IALM,CAKD,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALF,CAAP;AAMD;AAZW,CAAd","sourcesContent":["const baseURL = 'http://localhost:3000/api/emissions/emissionFactors';\n\nexport default{\n  getEmissionFactors(){\n    return fetch(baseURL)\n    .then(res => res.json())\n  },\n  post(payload){\n    return fetch(baseUrl, {\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: {'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n  },\n}\n"]}]}