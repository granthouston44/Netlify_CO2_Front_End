{"remainingRequest":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/babel-loader/lib/index.js!/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/UserDataService.js","dependencies":[{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/UserDataService.js","mtime":1579102510311},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CnZhciBiYXNlVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvZW1pc3Npb25zL3VzZXJzLyc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRVc2VyRGF0YTogZnVuY3Rpb24gZ2V0VXNlckRhdGEoKSB7CiAgICByZXR1cm4gZmV0Y2goYmFzZVVSTCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgfSk7CiAgfSwKICBwb3N0Rm9vdHByaW50OiBmdW5jdGlvbiBwb3N0Rm9vdHByaW50KHBheWxvYWQpIHsKICAgIHJldHVybiBmZXRjaChiYXNlVVJMLCB7CiAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSwKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/granthouston/Documents/codeclan_work/week_08/day_4/CO2_Footprint_Calculator/CO2_Footprint_Calculator/client/src/services/UserDataService.js"],"names":["baseURL","getUserData","fetch","then","res","json","postFootprint","payload","method","body","JSON","stringify","headers"],"mappings":";AAAA,IAAMA,OAAO,GAAG,4CAAhB;AAEA,eAAc;AACZC,EAAAA,WADY,yBACC;AACX,WAAOC,KAAK,CAACF,OAAD,CAAL,CACNG,IADM,CACD,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADF,CAAP;AAED,GAJW;AAKZC,EAAAA,aALY,yBAKEC,OALF,EAKU;AACpB,WAAOL,KAAK,CAACF,OAAD,EAAS;AACnBQ,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFa;AAGnBK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHU,KAAT,CAAL,CAKNT,IALM,CAKD,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALF,CAAP;AAMC;AAZS,CAAd","sourcesContent":["const baseURL = 'http://localhost:3000/api/emissions/users/'\n\nexport default{\n  getUserData(){\n    return fetch(baseURL)\n    .then(res => res.json())\n  },\n  postFootprint(payload){\n    return fetch(baseURL,{\n      method: 'POST',\n      body: JSON.stringify(payload),\n      headers: { 'Content-Type': 'application/json'}\n    })\n    .then(res => res.json())\n    }\n  }\n"]}]}